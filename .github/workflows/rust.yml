name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gtk-rs/gtk4-rs/gtk4:latest # TODO enable minor version tags / pinning
    
    steps:
    
    - uses: actions/checkout@v3
    
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Test
      run: cargo test
    
    - name: Build
      run: cargo build --release
    
    - uses: actions/upload-artifact@v4
      with:
        name: hovercrafter-linux
        path: ${{ github.workspace }}/target/release/main


  build-windows:
    runs-on: windows-latest
    steps:
    
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - uses: actions/checkout@v4
    
    - name: Install GTK4 via MSYS2
      run: |
          choco install -y msys2
          refreshenv
          ridk enable
          C:\msys64\usr\bin\bash.exe -lc "pacman --noconfirm -S mingw-w64-x86_64-gtk4 mingw-w64-x86_64-gettext mingw-w64-x86_64-libxml2 mingw-w64-x86_64-librsvg mingw-w64-x86_64-pkg-config mingw-w64-x86_64-gcc"

    - name: Set up environment variables
      run: |
          echo "GTK4_DIR=C:\\msys64\\mingw64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "PKG_CONFIG_PATH=C:\\msys64\\mingw64\\lib\\pkgconfig" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "Path=C:\\msys64\\mingw64\\bin;$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    
    - name: Build
      run: cargo build --release
      shell: cmd
    
    - uses: actions/upload-artifact@v4
      with:
        name: hovercrafter-windows
        path: ${{ github.workspace }}/target/release/main.exe
